<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ggplot2 | Michael Luu</title>
    <link>/category/ggplot2/</link>
      <atom:link href="/category/ggplot2/index.xml" rel="self" type="application/rss+xml" />
    <description>ggplot2</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© Michael Luu 2020</copyright><lastBuildDate>Wed, 14 Oct 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>ggplot2</title>
      <link>/category/ggplot2/</link>
    </image>
    
    <item>
      <title>Publication Quality Kaplan-Meier Survival Curves using ggplot2</title>
      <link>/post/km_ggplot/</link>
      <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
      <guid>/post/km_ggplot/</guid>
      <description>&lt;p&gt;The Kaplan-Meier (KM) survival curves are a hallmark figure that is commonly used to illustrate &amp;ldquo;time to event&amp;rdquo; analysis in clinical research. In this illustrative example, I will be using the &lt;code&gt;veterans&lt;/code&gt; data from the &lt;code&gt;survival&lt;/code&gt; package to construct KM survival curves using &lt;code&gt;ggplot2&lt;/code&gt; and building the figure from basic geoms within the package. I will also provide examples of other publicly available packages that can facilitate in constructing KM figures that utilizes &lt;code&gt;ggplot2&lt;/code&gt;. I believe this is a good exercise and illustrative example in potentially more advanced and little known techniques in &lt;code&gt;ggplot2&lt;/code&gt;, as well as provide insight in the flexibility and capabilities that are available in this package.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;veterans&lt;/code&gt; data comes from a randomised trial of two treatment regimens for lung cancer. Let&amp;rsquo;s start off by loading the &lt;code&gt;veterans&lt;/code&gt; data from the &lt;code&gt;survival&lt;/code&gt; and have a look at the data that we are currently working with.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- survival::veteran %&amp;gt;% as_tibble()

glimpse(df)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 137
## Columns: 8
## $ trt      &amp;lt;dbl&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1...
## $ celltype &amp;lt;fct&amp;gt; squamous, squamous, squamous, squamous, squamous, squamous...
## $ time     &amp;lt;dbl&amp;gt; 72, 411, 228, 126, 118, 10, 82, 110, 314, 100, 42, 8, 144,...
## $ status   &amp;lt;dbl&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1...
## $ karno    &amp;lt;dbl&amp;gt; 60, 70, 60, 60, 70, 20, 40, 80, 50, 70, 60, 40, 30, 80, 70...
## $ diagtime &amp;lt;dbl&amp;gt; 7, 5, 3, 9, 11, 5, 10, 29, 18, 6, 4, 58, 4, 9, 11, 3, 9, 2...
## $ age      &amp;lt;dbl&amp;gt; 69, 64, 38, 63, 65, 49, 69, 68, 43, 70, 81, 63, 63, 52, 48...
## $ prior    &amp;lt;dbl&amp;gt; 0, 10, 0, 10, 10, 0, 10, 0, 0, 0, 0, 10, 0, 10, 10, 0, 0, ...
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 137 x 8
##      trt celltype  time status karno diagtime   age prior
##    &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;    &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1     1 squamous    72      1    60        7    69     0
##  2     1 squamous   411      1    70        5    64    10
##  3     1 squamous   228      1    60        3    38     0
##  4     1 squamous   126      1    60        9    63    10
##  5     1 squamous   118      1    70       11    65    10
##  6     1 squamous    10      1    20        5    49     0
##  7     1 squamous    82      1    40       10    69    10
##  8     1 squamous   110      1    80       29    68     0
##  9     1 squamous   314      1    50       18    43     0
## 10     1 squamous   100      0    70        6    70     0
## # ... with 127 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The codebook for the dataset is provided below as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;trt&lt;/strong&gt;: 1=standard 2=test&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;celltype&lt;/strong&gt;: 1=squamous, 2=smallcell, 3=adeno, 4=large&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;time&lt;/strong&gt;: survival time (days)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;status&lt;/strong&gt;: censoring status&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;karno&lt;/strong&gt;: Karnofsky performance score (100=good)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;diagtime&lt;/strong&gt;: months from diagnosis to randomisation&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;age&lt;/strong&gt;: in years&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;prior&lt;/strong&gt;: prior therapy 0=no, 10=yes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To handle &amp;lsquo;time to event&amp;rsquo; data in R, we will first need to construct a survival object that encapsulates both the time to event information &lt;code&gt;time&lt;/code&gt; in our dataset as well as the event/censoring variable &lt;code&gt;status&lt;/code&gt;. We can then fit the data using the &lt;code&gt;survfit()&lt;/code&gt; function by constructing a formula with our response variable (survival object) on the left of the &lt;code&gt;~&lt;/code&gt; and the explanatory variable &lt;code&gt;trt&lt;/code&gt; on the right. The &lt;code&gt;summary()&lt;/code&gt; of the object from &lt;code&gt;survfit()&lt;/code&gt; provides us the probability of survival for a given treatment over time.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;fit &amp;lt;- survfit(Surv(time, status) ~ trt, data = df)

summary(fit)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Call: survfit(formula = Surv(time, status) ~ trt, data = df)
## 
##                 trt=1 
##  time n.risk n.event survival std.err lower 95% CI upper 95% CI
##     3     69       1   0.9855  0.0144      0.95771        1.000
##     4     68       1   0.9710  0.0202      0.93223        1.000
##     7     67       1   0.9565  0.0246      0.90959        1.000
##     8     66       2   0.9275  0.0312      0.86834        0.991
##    10     64       2   0.8986  0.0363      0.83006        0.973
##    11     62       1   0.8841  0.0385      0.81165        0.963
##    12     61       2   0.8551  0.0424      0.77592        0.942
##    13     59       1   0.8406  0.0441      0.75849        0.932
##    16     58       1   0.8261  0.0456      0.74132        0.921
##    18     57       2   0.7971  0.0484      0.70764        0.898
##    20     55       1   0.7826  0.0497      0.69109        0.886
##    21     54       1   0.7681  0.0508      0.67472        0.874
##    22     53       1   0.7536  0.0519      0.65851        0.862
##    27     51       1   0.7388  0.0529      0.64208        0.850
##    30     50       1   0.7241  0.0539      0.62580        0.838
##    31     49       1   0.7093  0.0548      0.60967        0.825
##    35     48       1   0.6945  0.0556      0.59368        0.812
##    42     47       1   0.6797  0.0563      0.57782        0.800
##    51     46       1   0.6650  0.0570      0.56209        0.787
##    52     45       1   0.6502  0.0576      0.54649        0.774
##    54     44       2   0.6206  0.0587      0.51565        0.747
##    56     42       1   0.6059  0.0591      0.50040        0.734
##    59     41       1   0.5911  0.0595      0.48526        0.720
##    63     40       1   0.5763  0.0598      0.47023        0.706
##    72     39       1   0.5615  0.0601      0.45530        0.693
##    82     38       1   0.5467  0.0603      0.44049        0.679
##    92     37       1   0.5320  0.0604      0.42577        0.665
##    95     36       1   0.5172  0.0605      0.41116        0.651
##   100     34       1   0.5020  0.0606      0.39615        0.636
##   103     32       1   0.4863  0.0607      0.38070        0.621
##   105     31       1   0.4706  0.0608      0.36537        0.606
##   110     30       1   0.4549  0.0607      0.35018        0.591
##   117     29       2   0.4235  0.0605      0.32017        0.560
##   118     27       1   0.4079  0.0602      0.30537        0.545
##   122     26       1   0.3922  0.0599      0.29069        0.529
##   126     24       1   0.3758  0.0596      0.27542        0.513
##   132     23       1   0.3595  0.0592      0.26031        0.496
##   139     22       1   0.3432  0.0587      0.24535        0.480
##   143     21       1   0.3268  0.0582      0.23057        0.463
##   144     20       1   0.3105  0.0575      0.21595        0.446
##   151     19       1   0.2941  0.0568      0.20151        0.429
##   153     18       1   0.2778  0.0559      0.18725        0.412
##   156     17       1   0.2614  0.0550      0.17317        0.395
##   162     16       2   0.2288  0.0527      0.14563        0.359
##   177     14       1   0.2124  0.0514      0.13218        0.341
##   200     12       1   0.1947  0.0501      0.11761        0.322
##   216     11       1   0.1770  0.0486      0.10340        0.303
##   228     10       1   0.1593  0.0468      0.08956        0.283
##   250      9       1   0.1416  0.0448      0.07614        0.263
##   260      8       1   0.1239  0.0426      0.06318        0.243
##   278      7       1   0.1062  0.0400      0.05076        0.222
##   287      6       1   0.0885  0.0371      0.03896        0.201
##   314      5       1   0.0708  0.0336      0.02793        0.180
##   384      4       1   0.0531  0.0295      0.01788        0.158
##   392      3       1   0.0354  0.0244      0.00917        0.137
##   411      2       1   0.0177  0.0175      0.00256        0.123
##   553      1       1   0.0000     NaN           NA           NA
## 
##                 trt=2 
##  time n.risk n.event survival std.err lower 95% CI upper 95% CI
##     1     68       2   0.9706  0.0205      0.93125        1.000
##     2     66       1   0.9559  0.0249      0.90830        1.000
##     7     65       2   0.9265  0.0317      0.86647        0.991
##     8     63       2   0.8971  0.0369      0.82766        0.972
##    13     61       1   0.8824  0.0391      0.80900        0.962
##    15     60       2   0.8529  0.0429      0.77278        0.941
##    18     58       1   0.8382  0.0447      0.75513        0.930
##    19     57       2   0.8088  0.0477      0.72056        0.908
##    20     55       1   0.7941  0.0490      0.70360        0.896
##    21     54       1   0.7794  0.0503      0.68684        0.884
##    24     53       2   0.7500  0.0525      0.65383        0.860
##    25     51       3   0.7059  0.0553      0.60548        0.823
##    29     48       1   0.6912  0.0560      0.58964        0.810
##    30     47       1   0.6765  0.0567      0.57394        0.797
##    31     46       1   0.6618  0.0574      0.55835        0.784
##    33     45       1   0.6471  0.0580      0.54289        0.771
##    36     44       1   0.6324  0.0585      0.52754        0.758
##    43     43       1   0.6176  0.0589      0.51230        0.745
##    44     42       1   0.6029  0.0593      0.49717        0.731
##    45     41       1   0.5882  0.0597      0.48216        0.718
##    48     40       1   0.5735  0.0600      0.46724        0.704
##    49     39       1   0.5588  0.0602      0.45244        0.690
##    51     38       2   0.5294  0.0605      0.42313        0.662
##    52     36       2   0.5000  0.0606      0.39423        0.634
##    53     34       1   0.4853  0.0606      0.37993        0.620
##    61     33       1   0.4706  0.0605      0.36573        0.606
##    73     32       1   0.4559  0.0604      0.35163        0.591
##    80     31       2   0.4265  0.0600      0.32373        0.562
##    84     28       1   0.4112  0.0597      0.30935        0.547
##    87     27       1   0.3960  0.0594      0.29509        0.531
##    90     25       1   0.3802  0.0591      0.28028        0.516
##    95     24       1   0.3643  0.0587      0.26560        0.500
##    99     23       2   0.3326  0.0578      0.23670        0.467
##   111     20       2   0.2994  0.0566      0.20673        0.434
##   112     18       1   0.2827  0.0558      0.19203        0.416
##   133     17       1   0.2661  0.0550      0.17754        0.399
##   140     16       1   0.2495  0.0540      0.16326        0.381
##   164     15       1   0.2329  0.0529      0.14920        0.363
##   186     14       1   0.2162  0.0517      0.13538        0.345
##   201     13       1   0.1996  0.0503      0.12181        0.327
##   231     12       1   0.1830  0.0488      0.10851        0.308
##   242     10       1   0.1647  0.0472      0.09389        0.289
##   283      9       1   0.1464  0.0454      0.07973        0.269
##   340      8       1   0.1281  0.0432      0.06609        0.248
##   357      7       1   0.1098  0.0407      0.05304        0.227
##   378      6       1   0.0915  0.0378      0.04067        0.206
##   389      5       1   0.0732  0.0344      0.02912        0.184
##   467      4       1   0.0549  0.0303      0.01861        0.162
##   587      3       1   0.0366  0.0251      0.00953        0.140
##   991      2       1   0.0183  0.0180      0.00265        0.126
##   999      1       1   0.0000     NaN           NA           NA
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The base R plotting method provides us with a basic KM figure. We can generate the figure by using the &lt;code&gt;plot()&lt;/code&gt; function on the &lt;code&gt;fit&lt;/code&gt; object.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot(fit)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/ggplot2km/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;576&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;GGally&lt;/code&gt; package also includes &lt;code&gt;ggsurv()&lt;/code&gt; which actually uses the &lt;code&gt;ggplot2&lt;/code&gt; in the backend to construct the figure.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;GGally::ggsurv(fit)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/ggplot2km/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;576&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;An even further improved KM figure comes from the &lt;code&gt;survminer&lt;/code&gt; package that includes a &amp;lsquo;Number at risk&amp;rsquo; table that is commonly show in combination with the KM figure.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;survminer::ggsurvplot(fit, data = df, risk.table = T)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/ggplot2km/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;576&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The KM figure I&amp;rsquo;m constructing is going to be based on the &lt;code&gt;survminer&lt;/code&gt; figure, that includes the secondary &amp;lsquo;Number at risk&amp;rsquo; table.&lt;/p&gt;
&lt;p&gt;We can start by estimating the survival estimates from day 0 to day 500, I chose 500 since it appears that survival trails off after 500 days and this is a method of truncating the figure. Then we can extract the survival estimates into a a structured tidy tibble.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;s &amp;lt;- summary(fit, times = seq(0, 500, 1), extend = T)

plot_data &amp;lt;- tibble(
  &#39;time&#39; = s$time,
  &#39;n.risk&#39; = s$n.risk,
  &#39;n.event&#39; = s$n.event,
  &#39;n.censor&#39; = s$n.censor,
  &#39;estimate&#39; = s$surv,
  &#39;std.error&#39; = s$std.err,
  &#39;strata&#39; = s$strata
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that we have the &amp;lsquo;tidied&amp;rsquo; data, we can start by constructing the base plot we will use to build from. We will map the x axis to &lt;code&gt;time&lt;/code&gt;, the y axis to &lt;code&gt;estimate&lt;/code&gt;, and the fill to &lt;code&gt;strata&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p &amp;lt;- ggplot(plot_data, aes(x = time, y = estimate, color = strata))

p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/ggplot2km/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;576&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The primary geom in building the figure is &lt;code&gt;geom_step()&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p &amp;lt;- p + geom_step(aes(linetype = strata), size = 1)

p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/ggplot2km/index_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;576&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This is pretty close to the plot that is provided from the &lt;code&gt;GGally&lt;/code&gt; package already, we just need a few more steps to further clean up the axes, adjust the aesthetics, and to add a theme. I also further expanded the x axes to 550 to provide some additional room for curve annotations.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;p &amp;lt;- p + 
  scale_x_continuous(breaks = seq(0, 500, 50)) +
  scale_y_continuous(labels = scales::percent_format()) +
  theme_classic() +
  theme(legend.position = &#39;top&#39;,
        axis.title = element_text(face = &#39;bold&#39;)) +
  labs(x = &#39;Days&#39;, y = &#39;Probability of Survival&#39;) + 
  coord_cartesian(xlim = c(0, 550)) + 
  ggsci::scale_color_d3()


p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/ggplot2km/index_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;576&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We can further supplement this figure by adding markers on the curves using the &lt;code&gt;ggrepel&lt;/code&gt; package. The simplest method I found to identify the coordinates of the ideal location of the annotations is by taking the last point of the curves by strata. Then we can use the &lt;code&gt;geom_text_repel()&lt;/code&gt; function to add the text label to the curves accordingly. Now that we have the annotations on the figure, we can remove the legends to give the actual figure some additional room.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;annotate_data &amp;lt;- plot_data %&amp;gt;%
  group_by(strata) %&amp;gt;%
  slice_tail(1)

p &amp;lt;- p + 
  ggrepel::geom_text_repel(data = annotate_data, aes(x = time, y = estimate, label = strata),
                           xlim = c(500, NA)) + 
  theme(legend.position = &#39;none&#39;)

p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/ggplot2km/index_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;576&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Next, we can construct the &amp;lsquo;At risk&amp;rsquo; table below the figure we just constructed. The table is actually a ggplot, where we are constructing a table of number of at risk plotted by &lt;code&gt;time&lt;/code&gt; on the x axis and &lt;code&gt;strata&lt;/code&gt; on the y axis. Since the time interval for the KM figure is per every 50 days, we will extract the &amp;lsquo;At risk&amp;rsquo; data similarly on a per 100 days basis. The most important concept to remember is to make the scale of the x axis &lt;code&gt;scale_x_continuous()&lt;/code&gt; is identical to the KM figure to have the alignment match between the two. The number at risk is then plotted using &lt;code&gt;geom_text()&lt;/code&gt; with &lt;code&gt;n.risk&lt;/code&gt; as the label.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;table_data &amp;lt;- plot_data %&amp;gt;% 
  filter(
    time %in% seq(0, 500, 50)
  ) 

t &amp;lt;- ggplot(table_data, aes(y = fct_rev(strata), x = time)) + 
  geom_text(aes(label = n.risk)) + 
  scale_x_continuous(breaks = seq(0, 500, 50), limits = c(0, 550))

t
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/ggplot2km/index_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;576&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now that we have a basis of the plot for the table, we can further customize it by adding a theme, and then further clean up the axes and the labels of the figure.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;t &amp;lt;- t + 
  theme(panel.background = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks = element_blank(),
        axis.title = element_blank(),
        axis.text = element_text(face = &#39;bold&#39;))

t
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/ggplot2km/index_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;576&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We now have 2 ggplot objects, &lt;code&gt;p&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt;. The &lt;code&gt;patchwork&lt;/code&gt; package is the &amp;lsquo;glue&amp;rsquo; we need to put the two plots together.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(patchwork)

km &amp;lt;- (p / t) + plot_layout(height = c(1, .25))

km
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/ggplot2km/index_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;576&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There you have it - a publication quality KM figure ready for submission.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My life in Months - Making a &#39;life plot&#39; in R using ggplot2 </title>
      <link>/post/mylifeinplots/</link>
      <pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate>
      <guid>/post/mylifeinplots/</guid>
      <description>&lt;p&gt;This blog post is inspired by 
&lt;a href=&#34;https://twitter.com/sharlagelfand&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sharla Gefland&lt;/a&gt; twitter post found 
&lt;a href=&#34;https://twitter.com/sharlagelfand/status/1282783913002373121?s=20&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;, where she made a &amp;lsquo;My Life in Months&amp;rsquo; plot.&lt;/p&gt;
&lt;p&gt;Annotations have always been the bane of my existence in ggplot2, and I figured this would be a fun project to get some practice. Looking at her github repo found 
&lt;a href=&#34;https://github.com/sharlagelfand/mylifeinmonths&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;, she made this figure using the waffle plot package found 
&lt;a href=&#34;https://cran.r-project.org/web/packages/waffle/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;. Although using the waffle package may simplify some aspects of making this figure, recreating this figure in pure ggplot2 will open up the arguments for further customization that may not be available via the waffle package.&lt;/p&gt;
&lt;p&gt;We can start off by creating a tibble for the basis of the plot. The goal here is to create a tibble starting from the starting month (month/year) I was born, until the current month/year. I can create this with the help of the &lt;code&gt;lubridate&lt;/code&gt; package, which simplifies the handling of dates in R, and using this package to further extract the month and year information from the date sequence.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- tibble(
  date = seq(mdy(&#39;9/1/1987&#39;), floor_date(Sys.Date(), &#39;month&#39;), &#39;month&#39;)
) %&amp;gt;%
  mutate(
    month = month(date),
    year = year(date)
  )

df &amp;lt;- tibble(date = seq(mdy(&#39;9/1/1987&#39;), Sys.Date(), &#39;1 month&#39;)) %&amp;gt;%
  mutate(month = month(date),
         year = year(date))

df
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 398 x 3
##    date       month  year
##    &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1 1987-09-01     9  1987
##  2 1987-10-01    10  1987
##  3 1987-11-01    11  1987
##  4 1987-12-01    12  1987
##  5 1988-01-01     1  1988
##  6 1988-02-01     2  1988
##  7 1988-03-01     3  1988
##  8 1988-04-01     4  1988
##  9 1988-05-01     5  1988
## 10 1988-06-01     6  1988
## # ... with 388 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using the tibble I just created, I can further define the &amp;lsquo;eras&amp;rsquo; that I would like to highlight in the life plot.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot_data &amp;lt;- df %&amp;gt;%
  mutate(
    era = case_when(
      date %in% mdy(&#39;9/1/1987&#39;):mdy(&amp;quot;9/1/1991&amp;quot;) ~ &#39;Childhood&#39;,
      date %in% mdy(&#39;10/1/1991&#39;):mdy(&#39;6/1/2005&#39;) ~ &#39;K-12 Grade School&#39;,
      date %in% mdy(&#39;7/1/2005&#39;):mdy(&#39;12/1/2009&#39;) ~ &#39;BSc in Biological Sciences&#39;,
      date %in% mdy(&#39;1/1/2010&#39;):mdy(&#39;7/1/2013&#39;) ~ &#39;Pre Graduate Work&#39;,
      date %in% mdy(&#39;8/1/2013&#39;):mdy(&#39;6/1/2015&#39;) ~ &#39;MPH in Biostatistics &amp;amp; Epidemiology&#39;,
      date %in% mdy(&#39;7/1/2015&#39;):mdy(&#39;8/1/2016&#39;) ~ &#39;Data Analyst&#39;,
      date %in% mdy(&#39;9/1/2016&#39;):Sys.Date() ~ &#39;Biostatistician&#39;
    )
  ) %&amp;gt;%
  mutate(era = factor(
    era,
    levels = c(
      &#39;Childhood&#39;,
      &#39;K-12 Grade School&#39;,
      &#39;BSc in Biological Sciences&#39;,
      &#39;Pre Graduate Work&#39;,
      &#39;MPH in Biostatistics &amp;amp; Epidemiology&#39;,
      &#39;Data Analyst&#39;,
      &#39;Biostatistician&#39;
    )
  ))

plot_data
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 398 x 4
##    date       month  year era      
##    &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt;    
##  1 1987-09-01     9  1987 Childhood
##  2 1987-10-01    10  1987 Childhood
##  3 1987-11-01    11  1987 Childhood
##  4 1987-12-01    12  1987 Childhood
##  5 1988-01-01     1  1988 Childhood
##  6 1988-02-01     2  1988 Childhood
##  7 1988-03-01     3  1988 Childhood
##  8 1988-04-01     4  1988 Childhood
##  9 1988-05-01     5  1988 Childhood
## 10 1988-06-01     6  1988 Childhood
## # ... with 388 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, I&amp;rsquo;ll create a base plot using ggplot2, where I&amp;rsquo;ll map the x axis to &lt;code&gt;year&lt;/code&gt;, and the y axis to &lt;code&gt;month&lt;/code&gt;. I&amp;rsquo;ll also use the geom, &lt;code&gt;geom_tile()&lt;/code&gt; to create the &amp;lsquo;blocks&amp;rsquo; that we see in the life plot, where we&amp;rsquo;ll map the fill to &lt;code&gt;era&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; ggplot(plot_data, aes(y = month, x = year)) + 
  geom_tile(color = &#39;white&#39;, aes(fill = era), size = 1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/mylifeinmonths/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;1152&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now that we have a simple base plot to work with, we can further customize and clean up the figure. A trick to give us a bigger &amp;lsquo;space&amp;rsquo; to work with is to expand the limits of the &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;x&lt;/code&gt; axis. Furthermore, I will use &lt;code&gt;scale_fill_d3()&lt;/code&gt; to add a fill theme to the plot.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;base_plot &amp;lt;- ggplot(plot_data, aes(y = month, x = year)) + 
  geom_tile(color = &#39;white&#39;, aes(fill = era), size = 1) + 
  scale_y_continuous(breaks = -6:18, limits = c(-6, 18)) +
  scale_x_continuous(breaks = 1980:2020) +
  labs(y = &#39;Month&#39;, x = &#39;Year&#39;) + 
  theme(legend.position = &#39;bottom&#39;) + 
  scale_fill_d3()
  

base_plot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/mylifeinmonths/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;1152&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Annotations have always been tricky, because we have to specifically define the coordinates of the annotations we are trying to add. I&amp;rsquo;m going to start off small with a small annotation on the top left corner with an arrow point to the top left square. The segments are created using the &lt;code&gt;geom_curve()&lt;/code&gt; and the text annotations are created using &lt;code&gt;annotate()&lt;/code&gt; via &lt;code&gt;geom_text()&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## annotate the definition of 1 square = 1 month
plot &amp;lt;- base_plot +
  geom_curve(
    x = 1987,
    y = 12,
    xend = 1986,
    yend = 14,
    curvature = -.4,
    arrow = arrow(length = unit(0.01, &amp;quot;npc&amp;quot;), ends = &#39;first&#39;),
    color = &#39;black&#39;
  ) + 
  annotate(
    &#39;text&#39;,
    x = 1985,
    y = 15,
    hjust = 0,
    label = &#39;1 square = 1 month&#39;,
    family = &amp;quot;Segoe Script&amp;quot;
  )

plot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/mylifeinmonths/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;1152&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Next I&amp;rsquo;ll start to map out exactly where I want each of the labels for the eras to be placed. This definitely took a while, and it helps if you have some forethought on where you want to place the labels.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;### set colors 
pallete_colors &amp;lt;- pal_d3(&amp;quot;category10&amp;quot;)(10)

## set size
annotation_size &amp;lt;- 5

plot &amp;lt;- plot + 
  annotate(
    &#39;text&#39;,
    x = 1989,
    y = -1,
    label = &#39;Childhood&#39;,
    color = pallete_colors[[1]],
    size = annotation_size,
    family = &amp;quot;Segoe Script&amp;quot;
  )  +
  annotate(
    &#39;text&#39;,
    x = 1998,
    y = -1,
    label = &#39;K-12 Grade School&#39;,
    color = pallete_colors[[2]],
    size = annotation_size,
    family = &amp;quot;Segoe Script&amp;quot;
  ) +
  annotate(
    &#39;text&#39;,
    x = 2007.5,
    y = -1,
    label = &#39;BSc in Biological Sciences&#39;,
    color = pallete_colors[[3]],
    size = annotation_size,
    family = &amp;quot;Segoe Script&amp;quot;
  ) +
  annotate(
    &#39;text&#39;,
    x = 2011,
    y = 14,
    label = &#39;Pre Graduate Employment&#39;,
    color = pallete_colors[[4]],
    size = annotation_size,
    family = &amp;quot;Segoe Script&amp;quot;
  ) +
  annotate(
    &#39;text&#39;,
    x = 2013,
    y = -3,
    label = &#39;MPH in Biostatistics &amp;amp; Epidemiology&#39;,
    color = pallete_colors[[5]],
    size = annotation_size,
    family = &amp;quot;Segoe Script&amp;quot;
  ) +
  annotate(
    &#39;text&#39;,
    x = 2012.5,
    y = 16,
    label = &#39;Data Analyst&#39;,
    color = pallete_colors[[6]],
    size = annotation_size,
    family = &amp;quot;Segoe Script&amp;quot;
  ) +
  annotate(
    &#39;text&#39;,
    x = 2018.5,
    y = -1,
    label = &#39;Biostatistician&#39;,
    color = pallete_colors[[7]],
    size = annotation_size,
    family = &amp;quot;Segoe Script&amp;quot;
  ) 

plot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/mylifeinmonths/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;1152&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now that we have the text placed in all the designated coordinates, we can start working on the arrows.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## add additional curve segments for labels

plot &amp;lt;- plot + 
  geom_curve(
    x = 1989,
    y = 1,
    xend = 1989,
    yend = -.5,
    curvature = .2,
    arrow = arrow(length = unit(0.01, &#39;npc&#39;), ends = &#39;first&#39;),
    color = &#39;black&#39;
  ) +
  geom_curve(
    x = 1998,
    y = 1,
    xend = 1998,
    yend = -.5,
    curvature = .2,
    arrow = arrow(length = unit(0.01, &#39;npc&#39;), ends = &#39;first&#39;),
    color = &#39;black&#39;
  ) +
  geom_curve(
    x = 2007,
    y = 1,
    xend = 2007,
    yend = -.5,
    curvature = -.2,
    arrow = arrow(length = unit(0.01, &#39;npc&#39;), ends = &#39;first&#39;),
    color = &#39;black&#39;
  ) +
  geom_curve(
    x = 2011,
    y = 12,
    xend = 2011,
    yend = 13.5,
    curvature = -.2,
    arrow = arrow(length = unit(0.01, &#39;npc&#39;), ends = &#39;first&#39;),
    color = &#39;black&#39;
  ) +
  geom_curve(
    x = 2015,
    y = 12,
    xend =  2015,
    yend = 16,
    arrow = arrow(length = unit(0.01, &#39;npc&#39;), ends = &#39;first&#39;),
    color = &#39;black&#39;,
    curvature = .8
  ) +
  geom_curve(
    x = 2014,
    y = 1,
    xend =  2014,
    yend = -2.5,
    arrow = arrow(length = unit(0.01, &#39;npc&#39;), ends = &#39;first&#39;),
    curvature = -0.2,
    color = &#39;black&#39;
  ) +
  geom_curve(
    x = 2018,
    y = 1,
    xend =  2018,
    yend = -0.5,
    arrow = arrow(length = unit(0.01, &#39;npc&#39;), ends = &#39;first&#39;),
    curvature = -0.2,
    color = &#39;black&#39;
  ) 

plot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/mylifeinmonths/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;1152&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now that we have most of the annotations on there, we can add some supplemental annotations, e.g. adding an annotations regarding each column is 1 year, and the segments to finish off the look.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## let&#39;s add a label for 1 column equals 1 year of age 

plot &amp;lt;- plot + 
  annotate(
    &#39;text&#39;,
    x = 1985,
    y = 6,
    label = &#39;1 year&#39;,
    angle = 90,
    size = 7,
    color = &#39;black&#39;,
    family = &amp;quot;Segoe Script&amp;quot;
  ) + 
  annotate(
    &#39;text&#39;,
    x = 1988,
    y = 13,
    label = &#39;age&#39;,
    size = 5,
    color = &#39;black&#39;,
    family = &amp;quot;Segoe Script&amp;quot;
  ) +
  geom_segment(
    x = 1988.75,
    y = 13,
    xend = 1993,
    yend = 13,
    arrow = arrow(ends = &#39;last&#39;, length = unit(.01, units = &#39;npc&#39;)),
    color = &#39;black&#39;
  ) +
  geom_segment(
    x = 1985,
    xend = 1985,
    y = 8,
    yend = 12,
    color = &#39;black&#39;
  ) +
  geom_segment(
    x = 1985,
    xend = 1985,
    y = 1,
    yend = 4,
    color = &#39;black&#39;
  ) +
  geom_segment(
    x = 1984.5,
    xend = 1985.5,
    y = 12,
    yend = 12,
    color = &#39;black&#39;
  ) +
  geom_segment(
    x = 1984.5,
    xend = 1985.5,
    y = 1,
    yend = 1,
    color = &#39;black&#39;
  ) 

plot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/mylifeinmonths/index_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;1152&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re almost there - now that we have all the annotations we want on there, we can remove the legend and use a theme to further remove the grid as well as the x and y axis.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;plot &amp;lt;- plot +
  theme_void() +
  theme(
    legend.position = &#39;none&#39;
  )

plot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/mylifeinmonths/index_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;1152&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s finish off this off by adding a title&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;## lets add a title
plot &amp;lt;- plot + 
  annotate(
    &#39;text&#39;,
    x = 1987,
    y = -5,
    label = &#39;Michael Luu&#39;,
    size = 25,
    hjust = 0,
    fontface = &#39;bold.italic&#39;
  )

plot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/mylifeinmonths/index_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;1152&#34; style=&#34;display: block; margin: auto;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Full resolution figure can be found 
&lt;a href=&#34;https://raw.githubusercontent.com/mluu921/life_plot/master/mylifeinmonths.png&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; along with the github repo for the full code 
&lt;a href=&#34;https://github.com/mluu921/life_plot&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
